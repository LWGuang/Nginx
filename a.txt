冒泡排序（英语：Bubble Sort）是一种简单的排序算法。它重复地遍历要排序的数列，每次比较相邻两个元素的大小，如果list[i] > list[i+1]就把他们交换位置。遍历数列重复地进行比较直到没有再需要交换，也就是说该数列已经排序完成。这个算法的名字由来是因为越大的元素会经由交换慢慢“浮”到数列的尾端。

冒泡排序算法的运作如下：

比较相邻的元素。如果第一个比第二个大（升序），就交换他们两个。
对每一对相邻元素作同样的工作，从开始第一对到结尾的最后一对。这步做完后，最后的元素会是最大的数。
针对所有的元素重复以上的步骤，除了最后一个。
持续每次对越来越少的元素重复上面的步骤，直到没有任何一对数字需要比较

arr = [3,2,3,4,1]

#def bubble_sort(arr):
    n = len(arr)
    for j in range(0, n - 1):
        for i in range(0, n - 1 - j):
            if arr[i] > arr[i + 1]:
                arr[i], arr[i + 1] = arr[i + 1], arr[i]

#bubble_sort(arr)
print(arr)

续一:
from random import randrange, shuffle

def Bubblesort():
    array = []

    while len(array) < 12:  # 范围内随机取12个数值
        array.append(randrange(-99, 101, 3))
    shuffle(array)  # 打乱数组

    print('排序前数组：{}'.format(array))

    for i in range(12):
        for j in range(11 - i):
            if array[j] > array[j + 1]:  # 遇到较小值前后交换
                array[j], array[j + 1] = array[j + 1], array[j]

    print('排序后数组：{}'.format(array))

Bubblesort()

续二:

def bubbleSort(arr,order):
    max = len(arr)
    for i in range(0, max):
        j = 1
        while(j<max-i):
            if((arr[j-1]>arr[j]) and (int(order)>0)) or ((arr[j-1]<arr[j]) and (int(order)<0)):
                arr[j-1], arr[j] = arr[j], arr[j - 1]
            j += 1
        i += 1
    return arr


A = [64, 25, 12, 22, 11] 
print(bubbleSort(A, -1))
print(bubbleSort(A, 1))















